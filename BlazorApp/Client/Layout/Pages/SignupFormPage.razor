@page "/signup"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

@using BlazorApp.Shared
@using BlazorApp.Client.Layout.PageComponents
@using System.Text.Json

<TitleComponent Title="Conestoga Connects" Level="1" />

<EditForm Model="@signupForm" OnValidSubmit="HandleSignup">
    <TitleComponent Title="Sign-Up" Level="3" />
    <TextInputComponent Label="Username" Placeholder="Username" @bind-value="signupForm.Username"/>
    <TextInputComponent Label="Password" Placeholder="Password" Type="password" @bind-value="signupForm.Password"/>
    <TextInputComponent Label="Email" Placeholder="Email" @bind-value="signupForm.Email"/> 

    <div class="form-group">
        <ButtonComponent Text="Sign-Up" Type="submit" />
        <a class="ml-2" href="/login">Already have an account? Login</a>
    </div>
</EditForm>

@if (errorMessages != null && errorMessages.Any())
{
        <div class="error-message">
        @foreach (var errorMessage in errorMessages)
        {
                    <div>@errorMessage</div>
        }
        </div>
}

<style> 

    * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
    }
    .error-message {
        color: red;
        text-align: center;
        margin-top: 10px;
    }
    body {
        background-color: #556c6d;
    }

    i {
        margin-left: 5px;
    }

    form {
        height: 550px;
        left: 50%;
        border-radius: 10px;
        width: 700px;
        margin-top: 450px;
        background-color: rgba(255,255,255,0.13);
        position: absolute;
        transform: translate(-50%,-50%);
        top: 50%;
        padding: 50px 35px;
    }

        form * {
            font-family: 'Poppins',sans-serif;
            color: #ffffff;
            letter-spacing: 0.5px;
            outline: none;
            border: none;
        }

        form h3 {
            font-size: 32px;
            text-align: center;
            user-select: none;
            font-weight: 500;
            line-height: 42px;
        }

        a {
            margin-bottom: 15px;
        }

    label {
        display: block;
        margin-top: 15px;
        font-size: 18px;
        font-weight: 500;
        user-select: none;
    }
.ml-2 {
        margin-left: 80px; /* Adjust this value as needed */
    }
</style>

@code {
    SignupFormModel signupForm = new SignupFormModel();
    List<String> errorMessages;

    private async Task HandleSignup()
    {
        var response = await HttpClient.PostAsJsonAsync("/api/Signup/signup", signupForm);

        if (response.IsSuccessStatusCode)
        {
            // Redirect to login page on successful signup
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            // Handle unsuccessful signup (e.g., display error messages)
            var content = await response.Content.ReadAsStringAsync();
            var doc = JsonDocument.Parse(content);
            errorMessages = ExtractErrorMessages(doc);
        }
    }

    private List<string> ExtractErrorMessages(JsonDocument doc)
    {
        var errorMessages = new List<string>();

        if (doc.RootElement.TryGetProperty("errors", out var errorsElement))
        {
            foreach (var property in errorsElement.EnumerateObject())
            {
                if (property.Value.ValueKind == JsonValueKind.Array)
                {
                    foreach (var error in property.Value.EnumerateArray())
                    {
                        errorMessages.Add(error.GetString());
                    }
                }
            }
        }

        return errorMessages;
    }
}