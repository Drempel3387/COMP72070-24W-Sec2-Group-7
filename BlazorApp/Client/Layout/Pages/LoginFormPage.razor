@page "/login"
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@using BlazorApp.Shared
@using BlazorApp.Client.Layout.PageComponents
@using System.Net.Http
@using System.Net.Http.Json


<head>
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
</head>

<body>
<TitleComponent Title="Conestoga Connects" Level="1" />
    <EditForm Model="@loginForm" OnValidSubmit="HandleLogin" class="login-form">
    <TitleComponent Title="Login" Level="3" />
        <TextInputComponent Label="Username" Placeholder="Username" Icon="fas fa-user" @bind-value="loginForm.Username" />
        <TextInputComponent Label="Password" Placeholder="Password" Icon="fas fa-lock" Type="password" @bind-value="loginForm.Password" />
    <LinkComponent Href="#" Text="Forgot Password?" AriaLabel="Forgot password link" class="forgot-password" />
    <ButtonComponent Text="Login" Type="submit" Width="100%" /> 
    <LinkComponent Href="/signup" Text="Sign-Up" AriaLabel="Sign up link" class="sign-up" />
    <!-- Add this div for the error message below the signup link -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message" style="color: red; font-size: 14px; margin-top: 10px; text-align: center;">
                @errorMessage
            </div>
        }
</EditForm>

</body>

<style>

    * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
    }

    body {
        background-color: #556c6d;
    }

    

    i {
        margin-left: 5px;
    }

    form {
        height: 520px;
        left: 50%;
        border-radius: 10px;
        width: 500px;
        margin-top: 450px;
        background-color: rgba(255,255,255,0.13);
        position: absolute;
        transform: translate(-50%,-50%);
        top: 50%;
        padding: 50px 35px;
    }

        form * {
            font-family: 'Poppins',sans-serif;
            color: #ffffff;
            letter-spacing: 0.5px;
            outline: none;
            border: none;
        }

        form h3 {
            font-size: 32px;
            text-align: center;
            user-select: none;
            font-weight: 500;
            line-height: 42px;
        }

        a {
            margin-bottom: 15px;
        }

    label {
        display: block;
        margin-top: 15px;
        font-size: 18px;
        font-weight: 500;
        user-select: none;
    }

</style>


@code {
    private LoginFormModel loginForm = new LoginFormModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
            var request = new HttpRequestMessage(HttpMethod.Post, "api/auth/login");
            var response = await httpClient.PostAsJsonAsync("api/auth/login", loginForm);
            if (response.IsSuccessStatusCode)
            {
            NavigationManager.NavigateTo("/home?loggedInUser=" + loginForm.Username); // Redirect to home page with loggedInUser parameter
            }
            else
            {
                errorMessage = "Invalid username or password."; // Display error message if login fails
            }
        }
    }
}

